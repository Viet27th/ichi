{"version":3,"file":"static/webpack/static/development/pages/login.js.07be01019c4879a87fe1.hot-update.js","sources":["webpack:///./scenes/login/index.js"],"sourcesContent":["import React from 'react';\nimport style from './style.css';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport {axiosInstance} from '../../services/axios.service';\nimport {regexEmail} from '../../services/regex.service';\nimport {AlertComponentEvolution} from '../../components/alert';\nimport {SpinnerComponentEvolution} from '../../components/spinner';\nimport cookie from '../../services/cookie.service';\nimport middleware from '../../middleware';\nimport {express_api} from '../../services/express_api.service';\n\nclass LoginScene extends React.Component {\n  static async getInitialProps(ctx) {\n    let { query } = ctx;\n    // If user logged in successfully, can't visit login page. Auto redirect to root url.\n    if(!middleware.redirectIfNotAuthenticated(ctx)) {\n      if(ctx.res) {\n        ctx.res.writeHead(303, {Location: '/'});\n        ctx.res.end();\n      } else {\n        Router.push('/');\n      }\n    }\n    \n    return { query };\n  }\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n  \n  render() {\n    return (\n      <div id='wrapped-login'>\n        <div id='login' >\n          <h2>Login</h2>\n          <input name='email' placeholder='Email' type='text'\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n          <input name='password' placeholder='Password' type='password'\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          \n          <div className='social pt-5 pb-3 d-flex justify-content-center align-items-center'>\n            <span className='twitter cursor-pointer'>\n              <i className=\"fab fa-twitter\"></i>\n            </span>\n            <span className='facebook cursor-pointer'>\n              <i className=\"fab fa-facebook-f\"></i>\n            </span>\n            <span className='google-plus cursor-pointer'>\n              <i className=\"fab fa-google-plus-g\"></i>\n            </span>\n            <span className='youtube cursor-pointer'>\n              <i className=\"fab fa-github\"></i>\n            </span>\n          </div>\n          \n          <input type='submit' value='Login' onClick={this.handleSubmit}/>\n          <Link href='/register'><a className='forgot'>Don't have an account?</a></Link>\n        </div>\n       \n        <style jsx>{style}</style>\n      </div>\n    );\n  };\n  \n  /**\n   * Refer: https://medium.freecodecamp.org/what-i-wish-i-knew-when-i-started-to-work-with-react-js-3ba36107fd13\n   * @param e\n   */\n  handleChange = e => {\n    let {target} = e;\n    this.setState({\n      [target.name]: target.value\n    });\n  };\n  \n  handleSubmit = () => {\n    if (!regexEmail(this.state.email) || this.state.email.trim() === '') {\n      AlertComponentEvolution.show('Email không chính xác.');\n    } else if (this.state.password.trim() === '') {\n      AlertComponentEvolution.show('Password không được để trống.');\n    } else {\n      SpinnerComponentEvolution.show();\n      axiosInstance().post(express_api.webLoginTraditionalUrl, {\n        email: this.state.email,\n        password: this.state.password\n      }, {\n        needLogin: false\n      }).then(result => {\n        SpinnerComponentEvolution.hide();\n        if (result.data.requestSuccessfully) {\n       \n          // Set cookie client\n          cookie.clientSetCookie('token',result.data.data.token, result.data.data.expMillisecond);\n          \n          // After logged in successfully, redirect to previous url\n          if(this.props.query.previousUrl) {\n            Router.push(this.props.query.previousUrl);\n          } else {\n            Router.push('/');\n          }\n        } else {\n          AlertComponentEvolution.show(result.data.message);\n        }\n      }).catch(error => {\n        SpinnerComponentEvolution.hide();\n        console.log(error);\n      });\n    }\n  };\n  \n}\n\nexport default LoginScene;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AACA;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAkDA;AACA;AACA;AAGA;AACA;AAxDA;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AADA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzFA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AAAA;AAAA;AAkCA;;;;AA5DA;AACA;AA6GA;;;;A","sourceRoot":""}